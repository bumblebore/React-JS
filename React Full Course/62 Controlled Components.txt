1) What are controlled state?

	reference: React form documentation

	when maintaining state inside a component
		--> keep single source of truth


	1.1) State maintained in our component == should be single source of truth
		Ex
			what each box will take	? incoming on prop
			what box will do? 
				based on incoming prop --> set its own internal state	
		
			Box will change its internal state
			Box will display 	: if its filled in or not filled in
				
	1.2)  Problem: Now we have 2 instances of the state.
		both instances dont match up 	---> i.e no single source of truth	
		
		//Basically array of objects in <App/>
		//Each box then changing that state without telling app component --> state wont match
	1.3) Ex in below code:
		Each input holds its own state
		In regular html form --> no react is involved --> also maintains its own state

		In our case:
		2 states
			1) input box (regular html)				//input box state 1
			2) updated on every keystrokein react code	//react state (visible inside input box)		
		//out setup : react state  --> mirrors --> state in react
		//good practice:  make react state drive the state (visible inside the input box)

	Conclusion:
			Add a value property to each inputs
			Add a piece of state : formData.firstName
							formData.lastName

	//What happened by adding this?
		Visually no difference
		Conceptually:
			if we type "Bob" in firstName		//value is not controlled by input field (But by react)
		
	//How working? How controlled by react?
		Every change we make --> runs handleChange() --> updates correct piece of state --> re-renders form --> sets the value of form 			input to be whatever state is --> React state in driver seat (telling input box, what to display)
										(rather than input box telling state what to display)



	1.4)  Why we learnt about controlled components?
		 if not setup correctly --> react complains about having uncontrolled components
			
		Implementing it is easy / than understanding
2)
	2.1) Set value of inputs = state	//represents input value
							//value= {formData.lastName}	//formData.lastName state represents input value

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	import React fron "react"
	export default function Form() {
	const [formData, setFormData] = React.useState(
		{firstName: "", lastName: "". email: ""}
	)
	function handleChange(event) {
		setFormData(prevFormData => {
			return {
				...prevFormData,
				[event.target.name]: event.target.value
				}
			})
		}
	return (
		<form>
		<input
			type="text"
			placeholder="First Name"
	 		onChange={handleChange}
			name="firstName"
			value={formData.firstName}
		/>
		<input
			type="text"
			placeholder="First Name"
	 		onChange={handleChange}
			name="lastName"
			value={formData.lastName}
		/>
		<input
			type="email"
			placeholder="Email"
			onChange={handleChange}
			name="email"
			value={formData.email}
		/>
		</form>


	1.4)  
	
	1.5)
const [memeImage, setMemeImage] = React.use$tate("http://i.ihgfliptom/lbijjpg")

Problem:initializing state as empty string , react


const [memeImage, setMemeImage] = React.use$tate("http://i.imgflip.com/1bij.jpg")
<img src={memeImage} className="meme--image" /> 

Solution

1) grab a placeholder image : http://i.imgflip.com/1bij.jpg	//gets rid of error

2) Challenge
	2.1) create an object meme
	property for: topText (default value = empty string), bottomText(default value = empty string), randomImage(default : http://i.imgflip.com/1bij.jpg  //avoid that error)
	
	2.2) Create separate state variable: allMemeImages


	//What this state variable contains? all our meme data

	//import memesData from "../memesData.js"


	2.3) use the state variable


Solution:
	
	1.1) Create a state variable meme, setMeme	//initial value : memesData array
	1.2) Create another state variable			//initial value : memesData array
			//now can use allMemeImages wherever we were using memesData
	1.3) call setMemeImage()
			//notice how randomImage is nested inside an object meme this time
			//have to use setMeme() to set that
			//access the previous meme, return an object(surround in parenthesis)	//implicitly return
			//return all properties of prevMeme + Alter randomImage property

			
	1.4) alter the random image url
	1.5) onClick added to button : {getMemeImage}	is called	//self defined function
	1.6) pass meme.randomImage in img tag
	1.7) Refresh --> click Get a new image button --> new image shows up

What not working yet? top text and bottom text
learn:  form, inputs, how to save state

import React from "react"
import memesData from "../memesData.js"
export default function Meme() {


	const [meme, setMeme] = React.useState({
		topText: "",
		bottomText: "",
		randomImage:" http://i.imgflip.com/1bij.jpg"
	})

	const [allMemeImages, setAllMemeImages] = React.useState(memesData)

	function getMemeImage() {
		const memesArray = allMemeImages.data.memes
		const randomNumber = Math.floow(Math.random() * memesArray.length)
		const url = memesArray[randomNumber].url
		setMeme(prevMeme) => ({
			...prevMeme,
			randomImage: url
		}))	 	//access the previous meme, return an object
		
}

return (
<main>
	<div className="form">

	<input
		type="text"
		placeholder="Top text"
		className="formâ€”-input"
	/>

	<input
		type="text"
		placeholder="Bottom text"
		className="form--input"
	/>

	<button
		className="form~-button"
		onClick={getHemeImage}
	>
		Get a new meme image 

	</button
	<img src = {meme.randomImage} className= "meme--image" />
</div>
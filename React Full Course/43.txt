a) Objective:
Create a component "count" to replace below 3 lines of code	//what component should render
pass prop to component: value of that prop = value of current count	//What component should display


<div className="counter--count">	//What component should render
<h1>{count}</h1>
</div>


1.1) Render a <Count number />  , pass counter prop
1.2) set prop = current value of count
1.3) import imaginative Count
1.4) Create count.js
1.5) make Count component receive props	//we will use that prop
1.6) What Count will return? 3 lines of div ,h1 and {Count}
		//earlier {count} referenced to  const[count, setCount]
		//now since receiving through prop 

			will it be: props.count --> NO
			will it be: props.number --> yes
1.7) Hit refresh
	hit + and - button

1.8) we know how to have a component declares its values that are intended to change + update UI

What we doing till now?
	initiate sate inside app component
	pass state value down to separate component (count)
	receive that state value as props

1.9)  Something Cool 

log "App Component Created" everytime instance of app component is created
so when <App />is called in index.js --> will console.log

Similarly for Count component
console.log("Count component rendered")

	//What render means? placing the elements (that react knew) needded ot be placed on screen
		//means placing the dom elements and styles on screen

	<App /> ---> <Count/>

>Output: 
	App Component rendered
	Count Component rendered

2.0) How often component gets re-rendered?
	Whenever state changes --> component is re-rendered	 (Which component? wherver state exists  + Child components that rely on state)
for ex. we changed state 0 --> 1		//click + button on counter
{count} component will re-render
//pass new value of count --> Update what i see on page

How react re-renders, optimizingly? advanced course

> basically whenever we change state  
	"App Component rendereed" shows up
	//Why App Component? that is where the state is declared
	//notice how Coutn component:does not show up --> does not depend on state

2.1) How can a child component make changes to its parents?
Next lesson



App.js
______________________________________________________________________________________
import React from "react"
import Count from "./Count"

export default function App() {

const [count, setCount] = React.use$tate(0)
function add() {
setCount(prevCount => prevCount + 1)
}
function subtract() {
setCount(prevCount => prevCount - 1)
}

console.log("App component rendered")

return (
	<div className="counter">
		<button className="counter--minus" onClick={subtract}>-</button>
		
/* instead of these 3 lines
		<div className="counter--count">
			<h1>{count}</h1>
		</div>
*/
	<button className="counter--minus" onClick={subtract}>-</button>
	<Count number = {count} />
 	<button className="counter--plus" onClick={add}>+</button>
</div>
}
______________________________________________________________________________________

Count.js

import React from "react"
export default function Count(props) {

console.log("Count component rendered")

return (
	<div className="counter--count">
		<h1>{props.number}</h1>
	</div>
	) 
}